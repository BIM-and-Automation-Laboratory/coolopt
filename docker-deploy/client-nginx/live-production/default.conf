upstream ui_live_prod {
    server ui_live_prod:3000;
}

upstream api_live_prod {
    server api_live_prod:5000;
}

server {
    listen 80;
    server_name www.domain.com; # server_name here

    location ~ /.well-known/acme-challenge/ {
        allow all;
        root /usr/share/nginx/html/letsencrypt;
    }

    location / {
        return 301 https://www.domain.com$request_uri;
    }
}

# Comment out the server block below when creating a new SSL 
# certificate for the first time, otherwise you will get 
# [no such file] errors for the certificate and certificate key
# ALSO: white testing config of this file, add the --staging param
# to the certbot command in the docker compose to circumnavigate 
# possible rate limit issues by the Let's encrypt server.
# DONT FORGET to create a dhparam file to be referenced in the server
# block below. Make sure you bind it to the ui(nginx lets encrypt) container
server {
    listen 443 ssl;
    server_name www.domain.com;
    client_max_body_size 100M;

    ssl_certificate         /etc/nginx/ssl/live/www.domain.com/fullchain.pem;
    ssl_certificate_key     /etc/nginx/ssl/live/www.domain.com/privkey.pem;
    ssl_dhparam             /etc/nginx/dhparam/dhparam-2048.pem;

    ssl_session_cache shared:le_nginx_SSL:10m;
    ssl_session_timeout 1440m;
    ssl_session_tickets off;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        # to redirect all the requests to index.html,
        # useful when you are using react-router
        try_files $uri $uri/ /index.html =404;
    }

    location /graphql {
        proxy_pass http://api_live_prod;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Forwarded-Proto https; # additional 
        proxy_set_header X-Url-Scheme $scheme; # additional 
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # additional
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        proxy_read_timeout 300;
        send_timeout 300;

    }
}
